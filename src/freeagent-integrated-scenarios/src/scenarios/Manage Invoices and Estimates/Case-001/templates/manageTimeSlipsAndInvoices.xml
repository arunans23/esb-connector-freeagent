<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<!-- This template is to create tasks, time slips and invoices in free Agent. -->
<template xmlns="http://ws.apache.org/ns/synapse" name="manageTimeSlipsAndInvoices">

    <!-- FreeAgent  template parameters -->
    <parameter name="freeAgent.apiUrl" description="URL of the FreeAgent API."/>
    <parameter name="freeAgent.accessToken" description="Access token of the FreeAgent API."/>
    <parameter name="freeAgent.projectId" description="FreeAgent project ID."/>
    <parameter name="freeAgent.userId" description="FreeAgent user ID."/>
    <parameter name="freeAgent.taskName" description="Name of the task for a given project of FreeAgent."/>
    <parameter name="freeAgent.isBillable" description="Parameter to check whether the task is billable or not."/>
    <parameter name="freeAgent.billableRate" description="Billing rate of the FreeAgent project"/>
    <parameter name="freeAgent.timeSlipDatedOn" description="Date specified for FreeAgent time slip."/>
    <parameter name="freeAgent.hours" description="Number of hours specified for the FreeAgent timeslip."/>
    <parameter name="freeAgent.invoiceDatedOn" description="Date specified for the FreeAgent invoice."/>
    <parameter name="freeAgent.payementPerDays"
               description="Number of days within which the invoice payment could be made."/>

    <!-- tSheets template parameters -->
    <parameter name="tSheets.id" description="ID of the timesheet for which the task will be created."/>

    <sequence>
        <!-- FreeAgent template Properties -->
        <property name="freeAgent.apiUrl" expression="$func:freeAgent.apiUrl"/>
        <property name="freeAgent.accessToken" expression="$func:freeAgent.accessToken"/>
        <property name="freeAgent.userId" expression="$func:freeAgent.userId"/>
        <property name="freeAgent.taskName" expression="$func:freeAgent.taskName"/>
        <property name="freeAgent.isBillable" expression="$func:freeAgent.isBillable"/>
        <property name="freeAgent.billableRate" expression="$func:freeAgent.billableRate"/>
        <property name="freeAgent.projectId" expression="$func:freeAgent.projectId"/>
        <property name="freeAgent.timeSlipDatedOn" expression="$func:freeAgent.timeSlipDatedOn"/>
        <property name="freeAgent.hours" expression="$func:freeAgent.hours"/>
        <property name="freeAgent.invoiceDatedOn" expression="$func:freeAgent.invoiceDatedOn"/>
        <property name="freeAgent.payementPerDays" expression="$func:freeAgent.payementPerDays"/>
        <property name="freeAgent.invoiceCreated" value="false" scope="operation"/>

        <!-- FreeAgent template Properties -->
        <property name="tSheets.id" expression="$func:tSheets.id"/>

        <!-- Process freeAgent operations, only if freeAgent accessToken provided -->
        <filter source="boolean(get-property('freeAgent.accessToken'))" regex="true">
            <then>

                <!-- Call createTask method in freeAgent for the selected project -->
                <freeagent.init>
                    <accessToken>{$ctx:freeAgent.accessToken}</accessToken>
                    <apiUrl>{$ctx:freeAgent.apiUrl}</apiUrl>
                </freeagent.init>
                <freeagent.createTask>
                    <project>{$ctx:freeAgent.projectId}</project>
                    <isBillable>{$ctx:freeAgent.isBillable}</isBillable>
                    <name>{$ctx:freeAgent.taskName}</name>
                    <billingRate>{$ctx:freeAgent.billableRate}</billingRate>
                </freeagent.createTask>

                <property name="taskUrl" expression="json-eval($task.url)"/>

                <property name="id" expression="fn:concat('timeSheet_id:',get-property('tSheets.id'))"/>
                <filter source="boolean(get-property('taskUrl'))" regex="false">
                    <then>
                        <property name="status" value="Error"/>
                        <property name="message" expression="json-eval($.)"/>
                    </then>
                    <else>
                        <script language="js">
                            <![CDATA[
				    var taskUrl = ''+mc.getProperty('taskUrl');
                    var taskId =taskUrl.substring(taskUrl.lastIndexOf('/')+1, taskUrl.length);
                    mc.setProperty("freeAgent.taskId", taskId);
				  ]]>
                        </script>

                        <property name="status" value="Success"/>
                        <property name="message"
                                  expression="fn:concat('Task has been created successfully with the task ID [',get-property('freeAgent.taskId'),']')"/>
                    </else>
                </filter>
                <call-template target="responseHandlerTemplate">
                    <with-param name="id" value="{$ctx:id}"/>
                    <with-param name="activity" value="freeagent_createTask"/>
                    <with-param name="status" value="{$ctx:status}"/>
                    <with-param name="message" value="{$ctx:message}"/>
                </call-template>

                <!-- Create the time slips, only if task is created -->
                <filter source="boolean(get-property('freeAgent.taskId'))" regex="true">
                    <then>
                        <!--Call createTimeSlip method to create time slips for the created task -->
                        <freeagent.init>
                            <accessToken>{$ctx:freeAgent.accessToken}</accessToken>
                            <apiUrl>{$ctx:freeAgent.apiUrl}</apiUrl>
                        </freeagent.init>
                        <freeagent.createTimeSlip>
                            <datedOn>{$ctx:freeAgent.timeSlipDatedOn}</datedOn>
                            <project>{$ctx:freeAgent.projectId}</project>
                            <hours>{$ctx:freeAgent.hours}</hours>
                            <task>{$ctx:freeAgent.taskId}</task>
                            <user>{$ctx:freeAgent.userId}</user>
                        </freeagent.createTimeSlip>

                        <property name="timeslipUrl" expression="json-eval($.timeslip.url)"/>

                        <property name="id" expression="fn:concat('task_id: ',get-property('freeAgent.taskId'))"/>
                        <filter source="boolean(get-property('timeslipUrl'))" regex="false">
                            <then>
                                <property name="status" value="Error"/>
                                <property name="message" expression="json-eval($.)"/>
                            </then>
                            <else>
                                <script language="js">
                                    <![CDATA[
							var timeslipUrl = ''+mc.getProperty('timeslipUrl');
							var timeslipId =timeslipUrl.substring(timeslipUrl.lastIndexOf('/')+1, timeslipUrl.length);
							mc.setProperty("freeAgent.timeslipId", timeslipId);
					    ]]>
                                </script>

                                <property name="status" value="Success"/>
                                <property name="message"
                                          expression="fn:concat('Time slip has been created successfully with the time slip ID [',get-property('freeAgent.timeslipId'),']')"/>
                            </else>
                        </filter>
                        <call-template target="responseHandlerTemplate">
                            <with-param name="id" value="{$ctx:id}"/>
                            <with-param name="activity" value="freeagent_createTimeSlip"/>
                            <with-param name="status" value="{$ctx:status}"/>
                            <with-param name="message" value="{$ctx:message}"/>
                        </call-template>

                        <!-- create an invoice, only if the timeslip is created. -->
                        <filter source="boolean(get-property('freeAgent.timeslipId'))" regex="true">
                            <then>

                                <!--Call getProjectById method to get project details for the given project id -->
                                <freeagent.init>
                                    <accessToken>{$ctx:freeAgent.accessToken}</accessToken>
                                    <apiUrl>{$ctx:freeAgent.apiUrl}</apiUrl>
                                </freeagent.init>
                                <freeagent.getProjectById>
                                    <id>{$ctx:freeAgent.projectId}</id>
                                </freeagent.getProjectById>

                                <property name="contactUrl" expression="json-eval($.project.contact)"/>
                                <property name="projectCurrency" expression="json-eval($.project.currency)"/>

                                <script language="js">
                                    <![CDATA[
							var contactUrl = ''+mc.getProperty('contactUrl');
							var contactId =contactUrl.substring(contactUrl.lastIndexOf('/')+1, contactUrl.length);
							mc.setProperty("freeAgent.contactId", contactId);
							
							var taskName = ''+mc.getProperty('freeAgent.taskName');
							var itemName = taskName.split('_')[0];
							mc.setProperty("freeAgent.itemName",itemName);
						]]>
                                </script>

                                <property name="freeAgent.itemPrice"
                                          expression="get-property('freeAgent.hours')*get-property('freeAgent.billableRate')"/>
                                <property name="freeAgent.itemDescription"
                                          expression="fn:concat('Payement for - ',get-property('freeAgent.itemName'),' (',get-property('freeAgent.timeslipId'),')')"/>

                                <payloadFactory media-type="json">
                                    <format>{
                                        "items":[
                                        {
                                        "description":"$1",
                                        "item_type":"Hours",
                                        "price":"$2",
                                        "quantity":"1.0"
                                        }
                                        ]
                                        }
                                    </format>
                                    <args>
                                        <arg expression="get-property('freeAgent.itemDescription')"/>
                                        <arg expression="get-property('freeAgent.itemPrice')"/>
                                    </args>
                                </payloadFactory>
                                <property name="freeAgent.invoiceItems" expression="json-eval($.items)"/>

                                <!--Call createInvoice method to create invoice using time slips as items -->
                                <freeagent.init>
                                    <accessToken>{$ctx:freeAgent.accessToken}</accessToken>
                                    <apiUrl>{$ctx:freeAgent.apiUrl}</apiUrl>
                                </freeagent.init>
                                <freeagent.createInvoice>
                                    <datedOn>{$ctx:freeAgent.invoiceDatedOn}</datedOn>
                                    <invoiceItems>{$ctx:freeAgent.invoiceItems}</invoiceItems>
                                    <paymentTermsInDays>{$ctx:freeAgent.payementPerDays}</paymentTermsInDays>
                                    <contact>{$ctx:freeAgent.contactId}</contact>
                                    <project>{$ctx:freeAgent.projectId}</project>
                                    <currency>{$ctx:projectCurrency}</currency>
                                </freeagent.createInvoice>

                                <property name="invoiceUrl" expression="json-eval($.invoice.url)"/>


                                <property name="id"
                                          expression="fn:concat('timeSlip_id: ',get-property('freeAgent.timeslipId'))"/>
                                <filter source="boolean(get-property('invoiceUrl'))" regex="false">
                                    <then>
                                        <property name="status" value="Error"/>
                                        <property name="message" expression="json-eval($.)"/>
                                    </then>
                                    <else>

                                        <script language="js">
                                            <![CDATA[
							      var invoiceUrl = ''+mc.getProperty('invoiceUrl');
							      var invoiceId =invoiceUrl.substring(invoiceUrl.lastIndexOf('/')+1, invoiceUrl.length);
							      mc.setProperty("freeAgent.invoiceId", invoiceId);
							   ]]>
                                        </script>

                                        <property name="freeAgent.invoiceCreated" value="true" scope="operation"/>
                                        <property name="freeAgent.invoice"
                                                  expression="get-property('freeAgent.invoiceId')" scope="operation"/>

                                        <property name="status" value="Success"/>
                                        <property name="message"
                                                  expression="fn:concat('An invoice has been created successfully with the invoice ID [',get-property('freeAgent.invoiceId'),']')"/>
                                    </else>
                                </filter>
                                <call-template target="responseHandlerTemplate">
                                    <with-param name="id" value="{$ctx:id}"/>
                                    <with-param name="activity" value="freeagent_createInvoice"/>
                                    <with-param name="status" value="{$ctx:status}"/>
                                    <with-param name="message" value="{$ctx:message}"/>
                                </call-template>
                            </then>
                        </filter>
                    </then>
                </filter>
            </then>
        </filter>
    </sequence>
</template>