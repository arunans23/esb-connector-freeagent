<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="freeagent_retrieveWonDealsAndCreateProjectsAndJobCodes"
       transports="https"
       statistics="disable" trace="disable" startOnLoad="true">
    <target>
        <inSequence onError="faultHandlerSeq">

            <!--BaseCRM Properties -->
            <property name="basecrm.apiUrl" expression="json-eval($.baseCrmApiUrl)"/>
            <property name="basecrm.email" expression="json-eval($.baseCrmEmail)"/>
            <property name="basecrm.password" expression="json-eval($.baseCrmPassword)"/>

            <!-- FreeAgent Properties -->
            <property name="freeagent.apiUrl" expression="json-eval($.freeAgentApiUrl)"/>
            <property name="freeagent.accessToken" expression="json-eval($.freeAgentAccessToken)"/>

            <!-- TSheets Properties -->
            <property name="tsheets.apiUrl" expression="json-eval($.tSheetsApiUrl)"/>
            <property name="tsheets.accessToken" expression="json-eval($.tSheetsAccessToken)"/>

            <!-- Call BaseCRM listDeals method to retrieve won deals -->
            <basecrm.init>
                <email>{$ctx:basecrm.email}</email>
                <responseType>json</responseType>
                <apiUrl>{$ctx:basecrm.apiUrl}</apiUrl>
                <password>{$ctx:basecrm.password}</password>
            </basecrm.init>
            <basecrm.listDeals>
                <stage>won</stage>
            </basecrm.listDeals>

            <filter source="$axis2:HTTP_SC" regex="200">
                <then>
                    <property name="deal.count" expression="count(//jsonArray/jsonElement/deal)" scope="operation"/>
                    <property name="deal.index" value="0" scope="operation"/>

                    <filter xpath="get-property('operation','deal.count')=0">
                        <then>
                            <property name="id" value="{}"/>
                            <property name="status" value="Skipped"/>
                            <property name="message" value="No won deals to process."/>
                            <call-template target="responseHandlerTemplate">
                                <with-param name="id" value="{$ctx:id}"/>
                                <with-param name="activity" value="basecrm_retrieveWonDeals"/>
                                <with-param name="status" value="{$ctx:status}"/>
                                <with-param name="message" value="{$ctx:message}"/>
                            </call-template>
                            <loopback/>
                        </then>
                        <else>
                            <!--FOR EACH deals : BEGIN -->
                            <iterate continueParent="true" id="dealsIterator" preservePayload="true"
                                     expression="//jsonArray/jsonElement/deal" sequential="true">
                                <target>
                                    <sequence>
                                        <property name="dealId" expression="//deal/id/text()"/>
                                        <property name="id" expression="fn:concat('deal_id:',get-property('dealId'))"/>
                                        <property name="project.name" expression="//deal/name/text()"/>
                                        <property name="freeagent.currency" expression="//deal/currency/text()"/>
                                        <property name="freeagent.contactOrganisationName"
                                                  expression="//deal/company/name/text()"/>

                                        <filter
                                                xpath="get-property('freeagent.contactOrganisationName')=null or get-property('freeagent.contactOrganisationName')=''">
                                            <then>
                                                <property name="deal.contactName"
                                                          expression="//deal/main_contact/name/text()"/>

                                                <script language="js">
                                                    <![CDATA[
                                       var contactName = mc.getProperty('deal.contactName');
                                       var contactArray = contactName.split(" ");
									   
                                       mc.setProperty("freeagent.contactFirstName", contactArray[0]); 
                                       
                                       if(contactArray.length>1){
                                          mc.setProperty("freeagent.contactLastName", contactArray[1]); 
                                       }
                                    ]]>
                                                </script>
                                            </then>
                                        </filter>

                                        <!-- Call createProject template to create projects in FreeAgent API -->
                                        <call-template target="createProject">
                                            <!-- parameter values will be passed on to a sequence template -->
                                            (
                                            <with-param name="id" value="{$ctx:id}"/>|
                                            <with-param name="freeagent.apiUrl" value="{$ctx:freeagent.apiUrl}"/>|
                                            <with-param name="freeagent.accessToken"
                                                        value="{$ctx:freeagent.accessToken}"/>|
                                            <with-param name="freeagent.contactFirstName"
                                                        value="{$ctx:freeagent.contactFirstName}"/>|
                                            <with-param name="freeagent.contactLastName"
                                                        value="{$ctx:freeagent.contactLastName}"/>|
                                            <with-param name="freeagent.contactOrganisationName"
                                                        value="{$ctx:freeagent.contactOrganisationName}"/>|
                                            <with-param name="freeagent.currency" value="{$ctx:freeagent.currency}"/>|
                                            <with-param name="freeagent.projectName" value="{$ctx:project.name}"/>|
                                            ) *
                                        </call-template>

                                        <payloadFactory media-type="json">
                                            <format>
                                                {
                                                "jobCode":{
                                                "name": "$1",
                                                "short_code": "$2"
                                                }
                                                }
                                            </format>
                                            <args>
                                                <arg expression="get-property('project.name')"/>
                                                <arg expression="get-property('dealId')"/>
                                            </args>
                                        </payloadFactory>

                                        <property name="jobCode" expression="json-eval($.jobCode)"/>
                                        <property name="tsheets.jobCodes"
                                                  expression="fn:concat(get-property('operation', 'tsheets.jobCodes'),get-property('jobCode'),',')"
                                                  scope="operation"/>

                                        <property name="wonDealsIdObject"
                                                  expression="fn:concat(get-property('operation', 'wonDealsIdObject'),get-property('dealId'),',')"
                                                  scope="operation"/>

                                        <property name="deal.index"
                                                  expression="get-property('operation','deal.index') + 1"
                                                  scope="operation"/>

                                    </sequence>
                                </target>
                            </iterate>
                            <!--FOR EACH deals : END -->

                            <filter xpath="get-property('operation', 'deal.count') = get-property('operation', 'deal.index')">
                                <then>
                                    <property name="tsheets.jobCodes"
                                              expression="fn:substring(get-property('operation','tsheets.jobCodes'), 1, fn:string-length(get-property('operation','tsheets.jobCodes'))-1)"
                                              scope="operation"/>
                                    <payloadFactory media-type="json">
                                        <format>
                                            {
                                            "data": [$1]
                                            }
                                        </format>
                                        <args>
                                            <arg expression="get-property('operation','tsheets.jobCodes')"/>
                                        </args>
                                    </payloadFactory>

                                    <property name="tsheets.jobCodes" expression="json-eval($.data)"/>

                                    <!-- Call TSheets addJobCodes method to create a new job code -->
                                    <tsheets.init>
                                        <apiUrl>{$ctx:tsheets.apiUrl}</apiUrl>
                                        <accessToken>{$ctx:tsheets.accessToken}</accessToken>
                                    </tsheets.init>
                                    <tsheets.addJobCodes>
                                        <jobCodes>{$ctx:tsheets.jobCodes}</jobCodes>
                                    </tsheets.addJobCodes>

                                    <property name="wonDealsIdObject"
                                              expression="fn:substring(get-property('operation','wonDealsIdObject'), 1, fn:string-length(get-property('operation','wonDealsIdObject'))-1)"
                                              scope="operation"/>
                                    <property name="id"
                                              expression="fn:concat('{deal_ids:[',get-property('operation','wonDealsIdObject'),']}')"/>

                                    <filter source="$axis2:HTTP_SC" regex="200">
                                        <then>
                                            <property name="jobCodeCount" expression="count(//results/jobcodes/*)"
                                                      scope="operation"/>
                                            <property name="jobCodeIndex" value="0" scope="operation"/>

                                            <iterate continueParent="true" id="jobCodesIterator" preservePayload="true"
                                                     expression="//results/jobcodes/*" sequential="true">
                                                <target>
                                                    <sequence>
                                                        <property name="jobcode.statusCode"
                                                                  expression="//_status_code"/>
                                                        <property name="jobcode.statusMessage"
                                                                  expression="//_status_message"/>
                                                        <property name="jobcode.short_code" expression="//short_code"/>
                                                        <property name="jobcode.id" expression="//id"/>
                                                        <property name="jobcode.statusExtraMessage"
                                                                  expression="//_status_extra"/>

                                                        <filter source="get-property('jobcode.statusCode')"
                                                                regex="^[^2][0-9][0-9]">
                                                            <then>
                                                                <payloadFactory media-type="json">
                                                                    <format>
                                                                        {
                                                                        "jobCode":
                                                                        {
                                                                        "statusMessage": $1,
                                                                        "message":$2
                                                                        }
                                                                        }
                                                                    </format>
                                                                    <args>
                                                                        <arg expression="get-property('jobcode.statusMessage')"/>
                                                                        <arg expression="get-property('jobcode.statusExtraMessage')"/>
                                                                    </args>
                                                                </payloadFactory>
                                                            </then>
                                                            <else>

                                                                <payloadFactory media-type="json">
                                                                    <format>
                                                                        {
                                                                        "jobCode":
                                                                        {
                                                                        "dealId":$1,
                                                                        "jobCodeId": $2,
                                                                        "statusMessage": "$3"
                                                                        }
                                                                        }
                                                                    </format>
                                                                    <args>
                                                                        <arg expression="get-property('jobcode.short_code')"/>
                                                                        <arg expression="get-property('jobcode.id')"/>
                                                                        <arg expression="get-property('jobcode.statusMessage')"/>
                                                                    </args>
                                                                </payloadFactory>
                                                            </else>
                                                        </filter>


                                                        <property name="jobCodeObject"
                                                                  expression="json-eval($.jobCode)"/>
                                                        <property name="jobCodesString"
                                                                  expression="fn:concat(get-property('operation', 'jobCodesString'),get-property('jobCodeObject'),',')"
                                                                  scope="operation"/>

                                                        <property name="jobCodeIndex"
                                                                  expression="get-property('operation','jobCodeIndex') + 1"
                                                                  scope="operation"/>

                                                    </sequence>
                                                </target>
                                            </iterate>

                                            <filter
                                                    xpath="get-property('operation', 'jobCodeCount')=get-property('operation', 'jobCodeIndex')">
                                                <then>

                                                    <property name="jobCodesString"
                                                              expression="fn:substring(get-property('operation','jobCodesString'), 1, fn:string-length(get-property('operation','jobCodesString'))-1)"
                                                              scope="operation"/>
                                                    <property name="message"
                                                              expression="fn:concat('{results:[',get-property('operation','jobCodesString'),']}')"/>
                                                    <property name="status" value="Success"/>
                                                    <call-template target="responseHandlerTemplate">
                                                        <with-param name="id" value="{$ctx:id}"/>
                                                        <with-param name="activity" value="tsheets_addJobCodes"/>
                                                        <with-param name="status" value="{$ctx:status}"/>
                                                        <with-param name="message" value="{$ctx:message}"/>
                                                    </call-template>
                                                </then>
                                            </filter>

                                        </then>
                                        <else>
                                            <property name="status" value="Error"/>
                                            <property name="message" expression="json-eval($.)"/>
                                            <call-template target="responseHandlerTemplate">
                                                <with-param name="id" value="{$ctx:id}"/>
                                                <with-param name="activity" value="tsheets_addJobCodes"/>
                                                <with-param name="status" value="{$ctx:status}"/>
                                                <with-param name="message" value="{$ctx:message}"/>
                                            </call-template>
                                        </else>
                                    </filter>
                                    <loopback/>
                                </then>
                            </filter>
                        </else>
                    </filter>
                </then>
                <else>
                    <property name="id" value="{}"/>
                    <property name="status" value="Skipped"/>
                    <property name="message" expression="json-eval($.)"/>
                    <call-template target="responseHandlerTemplate">
                        <with-param name="id" value="{$ctx:id}"/>
                        <with-param name="activity" value="basecrm_retrieveWonDeals"/>
                        <with-param name="status" value="{$ctx:status}"/>
                        <with-param name="message" value="{$ctx:message}"/>
                    </call-template>
                    <loopback/>
                </else>
            </filter>
        </inSequence>
        <outSequence>
            <payloadFactory media-type="json">
                <format>
                    {
                    "Response":{
                    "process":"FreeAgent-retrieveWonDealsAndCreateProjectsAndJobCodes",
                    "activityResponse":[$1]
                    }
                    }
                </format>
                <args>
                    <arg expression="get-property('operation','responseString')"/>
                </args>
            </payloadFactory>
            <property name="messageType" value="application/json" scope="axis2"/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>