<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->

<template name="createContact" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="organisationName" description="The name of organisation." />
   <parameter name="firstName" description="The first name of contact." />
   <parameter name="lastName" description="The last name of contact." />
   <parameter name="email" description="The email address of cantact." />
   <parameter name="phoneNumber" description="The phone number of contact." />
   <parameter name="address1" description="The address line 1 of contact." />
   <parameter name="town" description="The town of contact." />
   <parameter name="region" description="The region of contact." />
   <parameter name="postcode" description="The post code of contact." />
   <parameter name="address2" description="The address line 2 of contact." />
   <parameter name="address3" description="The address line 3 of contact." />
   <parameter name="contactNameOnInvoices" description="Boolean flag to indicate contact name should display or not in Invoices." />
   <parameter name="country" description="The country of contact." />
   <parameter name="salesTaxRegistrationNumber" description="The sales tax registration number of contact." />
   <parameter name="usesContactInvoiceSequence" description="Boolean flag to indicate that to use contact Invoive sequence." />

   <sequence>

      <property name="uri.var.organisationName" expression="$func:organisationName" />
      <property name="uri.var.firstName" expression="$func:firstName" />
      <property name="uri.var.lastName" expression="$func:lastName" />
      <property name="uri.var.email" expression="$func:email" />
      <property name="uri.var.phoneNumber" expression="$func:phoneNumber" />
      <property name="uri.var.address1" expression="$func:address1" />
      <property name="uri.var.town" expression="$func:town" />
      <property name="uri.var.region" expression="$func:region" />
      <property name="uri.var.postcode" expression="$func:postcode" />
      <property name="uri.var.address2" expression="$func:address2" />
      <property name="uri.var.address3" expression="$func:address3" />
      <property name="uri.var.contactNameOnInvoices" expression="$func:contactNameOnInvoices" />
      <property name="uri.var.country" expression="$func:country" />
      <property name="uri.var.salesTaxRegistrationNumber" expression="$func:salesTaxRegistrationNumber" />
      <property name="uri.var.usesContactInvoiceSequence" expression="$func:usesContactInvoiceSequence" />

      <payloadFactory media-type="json">
         <format>
            {
            "contact":
               {

               }
            }
         </format>
         <args>

         </args>
      </payloadFactory>

      <!-- Building payload for request -->
      <script language="js">
         <![CDATA[
            
            var payload = mc.getPayloadJSON();
            
            var organisationName = mc.getProperty("uri.var.organisationName");
            var firstName = mc.getProperty("uri.var.firstName");
            var lastName = mc.getProperty("uri.var.lastName");
            var email = mc.getProperty("uri.var.email");
            var phoneNumber = mc.getProperty("uri.var.phoneNumber");
            var address1 = mc.getProperty("uri.var.address1");
            var address2 = mc.getProperty("uri.var.address2");
            var address3 = mc.getProperty("uri.var.address3");
            var town = mc.getProperty("uri.var.town");
            var region = mc.getProperty("uri.var.region");
            var country = mc.getProperty("uri.var.country");
            var postcode = mc.getProperty("uri.var.postcode");
            var contactNameOnInvoices = mc.getProperty("uri.var.contactNameOnInvoices");
            var salesTaxRegistrationNumber = mc.getProperty("uri.var.salesTaxRegistrationNumber");
            var usesContactInvoiceSequence = mc.getProperty("uri.var.usesContactInvoiceSequence");
            
            if (organisationName != null && organisationName != ""){
               payload.contact.organisation_name = organisationName;
            }
            if (firstName != null && firstName != ""){
               payload.contact.first_name = firstName;
            }
            if (lastName != null && lastName != ""){
               payload.contact.last_name = lastName;
            }
            if (email != null && email != ""){
               payload.contact.email = email;
            }
            if (phoneNumber != null && phoneNumber != ""){
               payload.contact.phone_number = phoneNumber;
            }
            if (address1 != null && address1 != ""){
               payload.contact.address1 = address1;
            }
            if (address2 != null && address2 != ""){
               payload.contact.address2 = address2;
            }
            if (address3 != null && address3 != ""){
               payload.contact.address3 = address3;
            }
            if (town != null && town != ""){
               payload.contact.town = town;
            }
            if (region != null && region != ""){
               payload.contact.region = region;
            }
            if (country != null && country != ""){
               payload.contact.country = country;
            }
            if (postcode != null && postcode != ""){
               payload.contact.postcode = postcode;
            }
            if (contactNameOnInvoices != null && contactNameOnInvoices != ""){
               payload.contact.contact_name_on_invoices = contactNameOnInvoices;
            }
            if (salesTaxRegistrationNumber != null && salesTaxRegistrationNumber != ""){
               payload.contact.sales_tax_registration_number = salesTaxRegistrationNumber;
            }
            if (usesContactInvoiceSequence != null && usesContactInvoiceSequence != ""){
               payload.contact.uses_contact_invoice_sequence = usesContactInvoiceSequence;
            }
            mc.setPayloadJSON(payload);
         ]]>
      </script>

      <call>
         <endpoint>
            <http method="post" uri-template="{uri.var.apiUrl}/contacts" />
         </endpoint>
      </call>

      <!-- Remove custom Headers from the API Response -->
      <header name="X-Runtime" action="remove" scope="transport" />
      <header name="X-Rev" action="remove" scope="transport" />
      <header name="X-UA-Compatible" action="remove" scope="transport" />
      <header name="X-Request-Id" action="remove" scope="transport" />
      <header name="X-Host" action="remove" scope="transport" />
      <header name="ETag" action="remove" scope="transport" />
      <header name="Access-Control-Allow-Headers" action="remove" scope="transport" />
      <header name="Access-Control-Allow-Origin" action="remove" scope="transport" />
      <header name="Access-Control-Max-Age" action="remove" scope="transport" />
      <header name="Access-Control-Allow-Methods" action="remove" scope="transport" />
      <header name="Status" action="remove" scope="transport" />
      <header name="Access-Control-Expose-Headers" action="remove" scope="transport" />
      
   </sequence>
</template>